{"version":3,"sources":["modules/sidebar/sidebar.js","utils/constants.js","modules/dashboard/dashboardStyles.js","utils/utils.js","components/mailsList.js","modules/dashboard/dashboard.js","utils/customHook.js","components/signIn.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","hide","display","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","easeIn","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","openDrawerToolbar","margin","openDrawerLabel","closedDrawerLabel","root","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","selectedSideBarItem","borderLeft","menuItemsObj","name","icons","hasSubLevel","isOpen","isSelected","labelValue","children","SideBar","props","useTheme","useState","open","setDrawerOpen","menuItems","setMenuItems","classes","userDataObj","JSON","parse","userData","Drawer","variant","className","clsx","onMouseEnter","updateDrawerState","onMouseLeave","data-testid","closedDrawer","xs","Avatar","alt","firstName","src","Typography","lastName","designation","fontSize","style","verticalAlign","Divider","List","map","data","index","key","ListItem","button","onClick","indexValue","ele","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Collapse","in","timeout","unmountOnExit","component","disablePadding","idx","colors","labels","categories","indicatorColor","months","userLoginDetails","username","password","userDetails","email","userSentMailsList","subject","time","Date","from","to","fromEmail","category","hasAttachment","isRead","body","userInitialMailsList","marginTop","composeButton","color","controlBar","sectionHeading","paddingBottom","folderInfoItem","cursor","paddingTop","borderRadius","marginLeft","categoryItem","labelContainer","marginBottom","labelName","circle","height","emailSectionHeading","inboxCtrlButton","minWidth","searchField","textTransform","sendMailElement","sendButton","sendMailHeading","paddingRight","uniqueId","length","parseInt","Math","ceil","random","now","toPrecision","toString","replace","mailElement","borderTop","borderTopColor","borderBottomColor","borderBottom","nameInfo","position","mailDetails","mailDate","mailIsRead","CustomCheckbox","withStyles","checked","Checkbox","selectedObj","selectedmails","mailObj","maildata","undefined","find","id","onChange","event","change","Labels","categoryObject","MailsList","Grid","container","direction","mails","item","mailIsNotRead","handleSelection","selectedMailList","timeString","dateObj","getMonth","getDate","showDate","Dashboard","isDialogOpen","setShowDialog","selectedMails","setSelectedMails","cC","setCc","setTo","setSubject","setBody","isCCValid","setIsCCvalid","isToValid","setIsToValid","isSubjectValid","setIsSubjectValid","isBodyValid","setIsBodyValid","handleCloseDialog","Dialog","onClose","aria-labelledby","fullWidth","DialogTitle","DialogContent","autoComplete","TextField","value","localStorage","getItem","label","type","required","disabled","error","target","multiline","rows","DialogActions","Button","cancelButton","cc","currentMailsList","sentMailsList","sentMails","inbox","setItem","stringify","handleSentEmails","updateInbox","heading","endIcon","lg","size","section","fontWeight","changeheading","filter","Paper","elevation","emailSection","gutterBottom","startIcon","forEach","indicator","currentValue","mail","readSelectedMails","mailBoxType","currentMailBox","newMailBox","deleteEmail","flexDirection","placeholder","updateMails","selectMails","useSignInForm","initialValues","callback","inputs","setInputs","handleInputChange","persist","handleSubmit","preventDefault","SignIn","setError","userName","userObj","userEmail","currentMails","setUserData","onLogin","Box","pt","Container","justify","AppBar","onSubmit","href","appBar","left","zIndex","sharp","appBarShift","drawerWidth","toolBarClass","content","flexGrow","isDrawerOpen","App","setOpen","wasLoginSuccessfull","setLoginSuccess","setUserDetails","inboxValue","setInboxValue","headingText","setHeading","useEffect","CssBaseline","Toolbar","noWrap","Badge","badgeContent","showZero","clear","data-id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b0bef95b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { List, ListItem, Drawer, ListItemIcon } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.easeIn,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.easeIn,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      padding: theme.spacing(0, 1),\r\n\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    openDrawerToolbar: {\r\n      justifyContent: \"flex-start\",\r\n      margin: \"30px 10px 30px 10px\",\r\n    },\r\n    openDrawerLabel: {\r\n      display: \"inline\",\r\n    },\r\n    closedDrawerLabel: {\r\n      display: \"none\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(10),\r\n    },\r\n    selectedSideBarItem: {\r\n      borderLeft: \"4px solid DarkGreen\",\r\n    },\r\n  };\r\n});\r\n\r\nconst menuItemsObj = [\r\n  {\r\n    name: \"Dashboards\",\r\n    icons: \"dashboard\",\r\n    hasSubLevel: false,\r\n    isOpen: false,\r\n  },\r\n  {\r\n    name: \"Layouts\",\r\n    icons: \"web\",\r\n    hasSubLevel: false,\r\n    isOpen: false,\r\n  },\r\n  {\r\n    name: \"Graphs\",\r\n    icons: \"bar_chart\",\r\n    hasSubLevel: false,\r\n    isOpen: false,\r\n  },\r\n  {\r\n    name: \"Mailbox\",\r\n    icons: \"mail\",\r\n    hasSubLevel: true,\r\n    isSelected: true,\r\n    labelValue: \"16/24\",\r\n    children: [\r\n      {\r\n        name: \"Inbox\",\r\n        isSelected: true,\r\n      },\r\n      {\r\n        name: \"Email view\",\r\n        isSelected: false,\r\n      },\r\n      {\r\n        name: \"Compose email\",\r\n        isSelected: false,\r\n      },\r\n      {\r\n        name: \"Email templates\",\r\n        isSelected: false,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Metrics\",\r\n    icons: \"pie_chart\",\r\n    hasSubLevel: false,\r\n  },\r\n  {\r\n    name: \"Widgets\",\r\n    icons: \"widgets\",\r\n    hasSubLevel: false,\r\n  },\r\n  {\r\n    name: \"Forms\",\r\n    icons: \"list_alt\",\r\n    hasSubLevel: false,\r\n  },\r\n  {\r\n    name: \"App Views\",\r\n    icons: \"video_label\",\r\n    hasSubLevel: false,\r\n  },\r\n];\r\n\r\nconst SideBar = (props) => {\r\n  const theme = useTheme();\r\n  const [open, setDrawerOpen] = useState(false);\r\n  const [menuItems, setMenuItems] = useState(menuItemsObj);\r\n  const classes = useStyles(theme);\r\n  const userDataObj = JSON.parse(props.userData);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setDrawerOpen(true);\r\n    props.updateDrawerState(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawerOpen(false);\r\n    props.updateDrawerState(false);\r\n  };\r\n\r\n  const handleSidebarItem = (indexValue) => {\r\n    setMenuItems(\r\n      menuItems.map((ele, index) => {\r\n        if (indexValue === ele.name) {\r\n          return {\r\n            ...ele,\r\n            isSelected: !ele.isSelected,\r\n          };\r\n        } else {\r\n          return {\r\n            ...ele,\r\n            isSelected: false,\r\n          };\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: open,\r\n        [classes.drawerClose]: !open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        }),\r\n      }}\r\n      onMouseEnter={handleDrawerOpen}\r\n      onMouseLeave={handleDrawerClose}\r\n      data-testid=\"sidebar-drawer\"\r\n    >\r\n      <div\r\n        className={clsx(\r\n          classes.toolbar,\r\n          open ? classes.openDrawerToolbar : classes.closedDrawer\r\n        )}\r\n      >\r\n        {open ? (\r\n          <div xs={12}>\r\n            <Avatar\r\n              alt={userDataObj.firstName}\r\n              src=\"/static/images/avatar/1.jpg\"\r\n            />\r\n            <Typography>\r\n              {userDataObj.firstName} {userDataObj.lastName}\r\n            </Typography>\r\n            <Typography variant=\"caption\">\r\n              {userDataObj.designation}\r\n              <KeyboardArrowDownIcon\r\n                fontSize=\"small\"\r\n                style={{ verticalAlign: \"bottom\" }}\r\n              ></KeyboardArrowDownIcon>\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography>IN+</Typography>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {menuItems.map((data, index) => (\r\n          <div\r\n            className={clsx(data.isSelected ? classes.selectedSideBarItem : \"\")}\r\n            key={index}\r\n          >\r\n            <ListItem button onClick={() => handleSidebarItem(data.name)}>\r\n              <ListItemIcon>\r\n                <span className=\"material-icons\">{data.icons}</span>\r\n              </ListItemIcon>\r\n              <ListItemText primary={data.name} />\r\n              <ListItemSecondaryAction\r\n                className={\r\n                  open ? classes.openDrawerLabel : classes.closedDrawerLabel\r\n                }\r\n              >\r\n                {data.labelValue}\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            {data.hasSubLevel ? (\r\n              <Collapse\r\n                in={data.isSelected && open}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n              >\r\n                <List component=\"div\" disablePadding>\r\n                  {data.children.map((ele, idx) => (\r\n                    <ListItem button className={classes.nested} key={idx}>\r\n                      <ListItemText primary={ele.name} />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Collapse>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","export const colors = {\n  backgroundColor: \"#f3f3f4\",\n  sidebarColor: \"#2d424f\",\n  primaryGreenColor: \"#0eb799\",\n  greColor1: \"#9aa4a7\",\n  greyColor2: \"#c1c4c4\",\n  secondaryColor: \"#eca658\",\n  primaryRedColor: \"#db5a62\",\n  documentsCategoryColor: \"#db5a62\",\n  workCategoryColor: \"#0eb799\",\n  advertisingCategoryColor: \"#07c6c9\",\n  socialCategoryColor: \"#0f83c9\",\n  clientsCategoryColor: \"#eca658\",\n  defaultCategoryColor: \"#f9d6aa\",\n  white: \"#FFFFFF\",\n};\n\nexport const labels = [\n  \"Family\",\n  \"Work\",\n  \"Home\",\n  \"Children\",\n  \"Holidays\",\n  \"Music\",\n  \"Photography\",\n  \"Film\",\n];\n\nexport const categories = [\n  {\n    name: \"Work\",\n    indicatorColor: colors.workCategoryColor,\n  },\n  {\n    name: \"Documents\",\n    indicatorColor: colors.documentsCategoryColor,\n  },\n  {\n    name: \"Social\",\n    indicatorColor: colors.socialCategoryColor,\n  },\n  {\n    name: \"Advertising\",\n    indicatorColor: colors.advertisingCategoryColor,\n  },\n  {\n    name: \"Clients\",\n    indicatorColor: colors.clientsCategoryColor,\n  },\n];\n\nexport const folders = [\n  {\n    name: \"Inbox\",\n    icon: \"inbox\",\n    hasSecondaryInfo: true,\n    secondaryInfoColor: colors.secondaryColor,\n  },\n  {\n    name: \"Send Mail\",\n    icon: \"mail-outline\",\n    hasSecondaryInfo: false,\n    secondaryInfoColor: colors.secondaryColor,\n  },\n  {\n    name: \"Important\",\n    icon: \"star\",\n    hasSecondaryInfo: true,\n    secondaryInfoColor: colors.secondaryColor,\n  },\n  {\n    name: \"Drafts\",\n    icon: \"drafts\",\n    hasSecondaryInfo: true,\n    secondaryInfoColor: colors.primaryRedColor,\n  },\n  {\n    name: \"Trash\",\n    icon: \"delete\",\n    hasSecondaryInfo: false,\n  },\n];\n\nexport const months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\n\nexport const userLoginDetails = [\n  {\n    username: \"john@doe.com\",\n    password: \"doeJohn\",\n  },\n  {\n    username: \"anna@smith.com\",\n    password: \"smithAnna\",\n  },\n];\n\nexport const userDetails = {\n  \"john@doe.com\": {\n    firstName: \"John\",\n    lastName: \"Doe\",\n    designation: \"Art Director\",\n    email: \"john@doe.com\",\n  },\n  \"anna@smith.com\": {\n    firstName: \"Anna\",\n    lastName: \"Smith\",\n    designation: \"Art Intern\",\n    email: \"anna@smith.com\",\n  },\n};\n\nexport const userSentMailsList = {\n  \"john@doe.com\": [\n    {\n      subject: \"Lorem Ipsum\",\n      time: new Date(),\n      from: \"Anna Smith\",\n      to:'john@doe.com',\n      fromEmail: \"anna@smith.com\",\n      isSelected: false,\n      category: \"Work\",\n      hasAttachment: true,\n      isRead: true,\n      body: \"This is Lorem Ipsum email\",\n    },\n    {\n      subject: \"Lorem Ipsum 2\",\n      time: new Date(),\n      from: \"John Doe\",\n      to:'john@doe.com',\n      fromEmail: \"anna@smith.com\",\n      isSelected: true,\n      category: \"Clients\",\n      hasAttachment: false,\n      isRead: false,\n      body: \"This is continuation to the Lorem Ipsum2 email\",\n    },\n    {\n      subject: \"Contrary to popular belief\",\n      time: new Date(),\n      from: \"Monica Ryther\",\n      fromEmail: \"anna@smith.com\",\n      isSelected: true,\n      to:'john@doe.com',\n      hasAttachment: false,\n      isRead: true,\n      body: \"This is continuation to the Contrary to popular belief emails \",\n    },\n  ],\n  \"anna@smith.com\": [\n    {\n      subject: \"Many Desktops publishing pacakges\",\n      time: new Date(2020, 4, 3, 3, 20, 30),\n      from: \"John Doe\",\n      to:'anna@smith.com',\n      fromEmail: \"john@doe.com\",\n      isSelected: false,\n      category: \"Documents\",\n      hasAttachment: true,\n      isRead: true,\n      body: \"this is continuation tot he manydesktops publishing packages\",\n    },\n    {\n      subject: \"Lorem Ipsum 2\",\n      time: new Date(),\n      from: \"John Doe\",\n      to:'anna@smith.com',\n      fromEmail: \"john@doe.com\",\n      isSelected: true,\n      category: \"Clients\",\n      hasAttachment: false,\n      isRead: false,\n      body:\n        \"This is in continuation to the intial mail with mock data for the body\",\n    },\n    {\n      subject: \"Contrary to popular belief\",\n      time: new Date(),\n      from: \"Monica Ryther\",\n      fromEmail: \"monica@ryther.com\",\n      isSelected: true,\n      to:'anna@smith.com',\n      hasAttachment: false,\n      isRead: true,\n      body: \" Poplular belief email \",\n    },\n  ],\n};\n\nexport const userInitialMailsList = {\n  \"john@doe.com\": [\n    {\n      subject: \"Lorem Ipsum\",\n      time: new Date(),\n      from: \"Anna Smith\",\n      fromEmail: \"anna@smith.com\",\n      to: 'john@doe.com',\n      body: 'test line',\n      isSelected: false,\n      category: \"Work\",\n      hasAttachment: true,\n      isRead: true,\n    },\n    {\n      subject: \"Lorem Ipsum 2\",\n      time: new Date(),\n      from: \"John Doe\",\n      fromEmail: \"anna@smith.com\",\n      to: 'john@doe.com',\n      body: 'test line',\n      isSelected: true,\n      category: \"Clients\",\n      hasAttachment: false,\n      isRead: false,\n    },\n    {\n      subject: \"Contrary to popular belief\",\n      time: new Date(),\n      from: \"Monica Ryther\",\n      fromEmail: \"anna@smith.com\",\n      to: 'john@doe.com',\n      body: 'test line',\n      isSelected: true,\n      hasAttachment: false,\n      isRead: true,\n    },\n    {\n      subject: \"Many Desktops publishing pacakges\",\n      time: new Date(2020, 4, 3, 3, 20, 30),\n      from: \"John Doe\",\n      fromEmail: \"john@doe.com\",\n      to: 'john@doe.com',\n      body: 'test line',\n      isSelected: false,\n      category: \"Documents\",\n      hasAttachment: true,\n      isRead: true,\n    },\n  ],\n  \"anna@smith.com\": [\n    {\n      subject: \"Many Desktops publishing pacakges\",\n      time: new Date(2020, 4, 3, 3, 20, 30),\n      from: \"John Doe\",\n      fromEmail: \"john@doe.com\",\n      to: 'anna@smith.com',\n      body: 'test line',\n      isSelected: false,\n      category: \"Documents\",\n      hasAttachment: true,\n      isRead: true,\n    },\n    {\n      subject: \"Lorem Ipsum 2\",\n      time: new Date(),\n      from: \"John Doe\",\n      fromEmail: \"john@doe.com\",\n      to: 'anna@smith.com',\n      body: 'test line',\n      isSelected: true,\n      category: \"Clients\",\n      hasAttachment: false,\n      isRead: false,\n    },\n    {\n      subject: \"Contrary to popular belief\",\n      time: new Date(),\n      from: \"Monica Ryther\",\n      fromEmail: \"monica@ryther.com\",\n      to: 'anna@smith.com',\n      body: 'test line',\n      isSelected: true,\n      hasAttachment: false,\n      isRead: true,\n    },\n  ],\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { colors } from \"./../../utils/constants\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      marginTop: \"64px\",\n      backgroundColor: colors.backgroundColor,\n    },\n    composeButton: {\n      color: colors.white,\n      backgroundColor: colors.primaryGreenColor,\n      width: \"100%\",\n    },\n    controlBar: {\n      padding: \"0 20px\",\n    },\n    sectionHeading: {\n      fontSize: \"1rem\",\n      paddingBottom: \"0.8rem\",\n    },\n    folderInfoItem: {\n      cursor: \"pointer\",\n      display: \"flex\",\n      paddingBottom: \"0.3rem\",\n      paddingTop: \"0.2rem\",\n      \"& span.material-icons\": { fontSize: \"1rem\", marginRight: \"1rem\" },\n      \"& p\": {\n        display: \"inline\",\n        fontSize: \"0.9rem\",\n      },\n      \"& p.countInfo\": {\n        padding: \"0 10px\",\n        borderRadius: \"4px\",\n        marginLeft: \"auto\",\n      },\n    },\n    categoryItem: {\n      paddingBottom: \"0.3rem\",\n      paddingTop: \"0.2rem\",\n    },\n    labelContainer: {\n      backgroundColor: colors.white,\n      padding: \"5px\",\n      display: \"inline-flex\",\n      marginBottom: \"10px\",\n      marginRight: \"10px\",\n      \"& span.material-icons\": {\n        color: colors.greColor1,\n        fontSize: \"16px\",\n      },\n    },\n    labelName: {\n      fontSize: \"12px\",\n    },\n    circle: {\n      width: \"0.8rem\",\n      height: \"0.8rem\",\n      display: \"inline-block\",\n      borderRadius: \"50%\",\n      marginRight: \"10px\",\n    },\n\n    // inside the Inbox panel\n    emailSectionHeading: {\n      padding: \"1.5rem\",\n    },\n    inboxCtrlButton: {\n      fontSize: \"0.6rem\",\n      padding: \"0.5rem\",\n      marginLeft: \"0.5rem\",\n      minWidth: \"auto\",\n      \"& span>span\": {\n        margin: \"0\",\n        \"& svg.MuiSvgIcon-root\": {\n          fontSize: \"0.8rem\",\n        },\n      },\n    },\n    \"button.inboxCtrlButton:first-of-type\": {\n      paddingLeft: 0,\n    },\n    searchField: {\n      \"& input\": {\n        // height: '36px',\n        // borderColor: colors.greyColor2,\n      },\n      \"& button\": {\n        backgroundColor: colors.primaryGreenColor,\n        textTransform: \"none\",\n        color: colors.white,\n      },\n    },\n    sendMailElement: {\n      display: \"flex\",\n      \"& > div\": {\n        width: \"100%\",\n      },\n    },\n    sendButton: {\n      color: colors.white,\n      backgroundColor: colors.primaryGreenColor,\n    },\n    sendMailHeading: {\n      display: \"inline\",\n      paddingRight: \"1rem\",\n    },\n  };\n});\n\nexport default useStyles;\n","import { months, userDetails } from \"./constants\";\n\nexport const setUserData = () => {\n  const userEmail = localStorage.getItem(\"loggedInUserEmail\");\n  const currentMails = JSON.parse(localStorage.getItem(\"mailsList\"))[\n    userEmail\n  ].map((mail) => {\n    return {\n      ...mail,\n      id: uniqueId(),\n    };\n  });\n  const sentMailsList = JSON.parse(localStorage.getItem(\"sentMailsList\"))[\n    userEmail\n  ].map((mail) => {\n    return {\n      ...mail,\n      id: uniqueId(),\n    };\n  });\n  localStorage.setItem(\"sentMails\", JSON.stringify(sentMailsList));\n  localStorage.setItem(\"inbox\", JSON.stringify(currentMails));\n  localStorage.setItem(\"userDetails\", JSON.stringify(userDetails[userEmail]));\n};\n\nexport const handleSentEmails = (cc, to, subject, body) => {\n  if (to !== \"\" && subject !== \"\" && body !== \"\") {\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n    let currentMailsList = JSON.parse(localStorage.getItem(\"mailsList\"));\n    let sentMailsList = JSON.parse(localStorage.getItem(\"sentMailsList\"));\n    let sentMails = JSON.parse(localStorage.getItem(\"sentMails\"));\n    let inbox = JSON.parse(localStorage.getItem(\"inbox\"));\n    const mailObj = {\n      id: uniqueId(),\n      time: new Date(),\n      subject: subject,\n      from: `${userDetails.firstName} ${userDetails.lastName}`,\n      cc: cc,\n      to: to,\n      body: body,\n      isRead: false,\n      isSelected: false,\n      fromEmail: `${userDetails.email}`,\n      hasAttachment: false,\n    };\n    currentMailsList[to] = [...currentMailsList[to], mailObj];\n    sentMailsList[userDetails.email] = [\n      ...sentMailsList[userDetails.email],\n      mailObj,\n    ];\n    localStorage.setItem(\"mailsList\", JSON.stringify(currentMailsList));\n    localStorage.setItem(\"sentMailsList\", JSON.stringify(sentMailsList));\n    localStorage.setItem(\"sentMails\", JSON.stringify([...sentMails, mailObj]));\n    if (to === userDetails.email) {\n      localStorage.setItem(\"inbox\", JSON.stringify([...inbox, mailObj]));\n    }\n  }\n};\n\nexport const deleteEmail = (id, mailBoxType) => {\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n  let currentMailBox, currentMailsList;\n  if (mailBoxType === \"inbox\") {\n    currentMailBox = JSON.parse(localStorage.getItem(\"inbox\"));\n    currentMailsList = JSON.parse(localStorage.getItem(\"mailsList\"));\n  } else {\n    currentMailBox = JSON.parse(localStorage.getItem(\"sentMails\"));\n    currentMailsList = JSON.parse(localStorage.getItem(\"sentMailsList\"));\n  }\n  const newMailBox = currentMailBox.filter((ele) => ele.id !== id);\n  localStorage.setItem(mailBoxType, JSON.stringify(newMailBox));\n  currentMailsList[userDetails.email] = currentMailsList[\n    userDetails.email\n  ].filter((ele) => ele.id !== id);\n  localStorage.setItem(\n    mailBoxType === \"inbox\" ? \"mailsList\" : \"sentMailsList\",\n    JSON.stringify(currentMailsList)\n  );\n};\n\nexport const readSelectedMails = (id, indicator) => {\n  const inbox = JSON.parse(localStorage.getItem(indicator));\n  const currentValue = JSON.stringify(\n    inbox.map((mail) => {\n      if (mail.id === id) {\n        mail.isRead = !mail.isRead;\n      }\n      return mail;\n    })\n  );\n  localStorage.setItem(indicator, currentValue);\n};\n\nexport const showDate = (timeString) => {\n  const dateObj = new Date(timeString);\n  return months[dateObj.getMonth()] + \" \" + dateObj.getDate();\n};\n\nexport const uniqueId = (length = 16) => {\n  return parseInt(\n    Math.ceil(Math.random() * Date.now())\n      .toPrecision(length)\n      .toString()\n      .replace(\".\", \"\")\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AttachmentIcon from \"@material-ui/icons/Attachment\";\nimport { colors, categories } from \"../utils/constants\";\nimport { showDate } from \"../utils/utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  mailElement: {\n    display: \"flex\",\n    padding: \"0 1.5rem\",\n    alignItems: \"center\",\n    \"& span\": {\n      paddingLeft: 0,\n    },\n    \"& p\": {\n      display: \"inline\",\n    },\n    borderTop: \"1px solid\",\n    borderTopColor: colors.greColor1,\n    cursor: \"default\",\n  },\n  \"mailElement:last-type-of\": {\n    borderBottomColor: colors.greColor1,\n    borderBottom: \"1px solid\",\n  },\n  nameInfo: {\n    position: \"relative\",\n    display: \"flex\",\n    width: \"20%\",\n    alignItems: \"baseline\",\n    paddingLeft: \"1rem\",\n    \"& p.nameText\": {\n      fontSize: \"1rem\",\n    },\n  },\n  mailDetails: {\n    width: \"65%\",\n    display: \"flex\",\n    alignItems: \"baseline\",\n    paddingLeft: \"1.5rem\",\n  },\n  mailDate: {\n    paddingLeft: \"1.5rem\",\n  },\n  mailIsRead: {\n    backgroundColor: \"#f9f8f8\",\n  },\n}));\n\nconst mailsSelected = (selectedObj, mailObj) => {\n  const isObjectPresent = selectedObj.find((ele) => ele === mailObj.id);\n  return isObjectPresent !== undefined ? true : false;\n};\n\nconst CustomCheckbox = withStyles({\n  root: {\n    \"&$checked\": {\n      color: colors.primaryGreenColor,\n    },\n  },\n  checked: {},\n})((props) => (\n  <Checkbox\n    color=\"default\"\n    {...props}\n    checked={mailsSelected(props.selectedmails, props.maildata)}\n    onChange={(event) => props.change(event, props.maildata)}\n  />\n));\n\nconst Labels = (props) => {\n  const categoryObject = categories.find((ele) => ele.name === props.name);\n  return (\n    <Typography\n      style={{\n        padding: \"3px\",\n        color: colors.white,\n        fontSize: \"0.6rem\",\n        backgroundColor:\n          categoryObject !== undefined\n            ? categoryObject.indicatorColor\n            : colors.defaultCategoryColor,\n        borderRadius: \"5px\",\n        marginLeft: \"auto\",\n      }}\n    >\n      {props.name}\n    </Typography>\n  );\n};\n\nconst MailsList = (props) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"column\">\n        {props.mails !== null ? (\n          props.mails.map((data, index) => (\n            <Grid\n              item\n              key={index}\n              className={clsx(\n                classes.mailElement,\n                data.isRead ? classes.mailIsRead : classes.mailIsNotRead\n              )}\n            >\n              <CustomCheckbox\n                maildata={data}\n                change={props.handleSelection}\n                selectedmails={props.selectedMailList}\n              ></CustomCheckbox>\n              <div className={classes.nameInfo}>\n                <Typography variant=\"body2\" className=\"nameText\">\n                  {data.from}\n                </Typography>\n                {data.category !== undefined ? (\n                  <Labels name={data.category}></Labels>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className={classes.mailDetails}>\n                <Typography variant=\"body2\"> {data.subject}</Typography>\n                {data.hasAttachment ? (\n                  <AttachmentIcon\n                    style={{ marginLeft: \"auto \", color: colors.greColor1 }}\n                  />\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className={classes.mailDate}>\n                <Typography variant=\"body2\">{showDate(data.time)}</Typography>\n              </div>\n            </Grid>\n          ))\n        ) : (\n          <></>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default MailsList;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Divider, TextField } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport useStyles from \"./dashboardStyles\";\nimport {\n  categories,\n  colors,\n  labels,\n  userDetails,\n} from \"./../../utils/constants\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MailsList from \"../../components/mailsList\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport ArrowForward from \"@material-ui/icons/ArrowForward\";\nimport {\n  deleteEmail,\n  handleSentEmails,\n  readSelectedMails,\n} from \"../../utils/utils\";\n\nconst Dashboard = (props) => {\n  const [isDialogOpen, setShowDialog] = useState(false);\n  const [selectedMails, setSelectedMails] = useState([]);\n  const classes = useStyles();\n\n  //Dialog States\n  const [cC, setCc] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [isCCValid, setIsCCvalid] = useState(true);\n  const [isToValid, setIsToValid] = useState(true);\n  const [isSubjectValid, setIsSubjectValid] = useState(true);\n  const [isBodyValid, setIsBodyValid] = useState(true);\n\n  const handleCloseDialog = () => {\n    setShowDialog(false);\n  };\n\n  const handleOpenDialog = () => {\n    setShowDialog(true);\n    setTo(\"\");\n    setCc(\"\");\n    setSubject(\"\");\n    setBody(\"\");\n    setIsBodyValid(true);\n    setIsCCvalid(true);\n    setIsToValid(true);\n    setIsSubjectValid(true);\n  };\n\n  const handleEmailSending = (event) => {\n    to === \"\" || to === undefined ? setIsToValid(false) : setIsToValid(true);\n    subject === \"\" || subject === undefined\n      ? setIsSubjectValid(false)\n      : setIsSubjectValid(true);\n    body === \"\" || body === undefined\n      ? setIsBodyValid(false)\n      : setIsBodyValid(true);\n    if (to !== \"\" && subject !== \"\" && body !== \"\") {\n      handleSentEmails(cC, to, subject, body, userDetails);\n      props.updateInbox(props.heading === \"Inbox\" ? \"inbox\" : \"sentMails\");\n      setShowDialog(false);\n    }\n  };\n\n  const handleDelete = () => {\n    selectedMails.forEach((ele) => {\n      deleteEmail(ele, props.heading === \"Inbox\" ? \"inbox\" : \"sentMails\");\n    });\n    setSelectedMails([]);\n    props.updateInbox(props.heading === \"Inbox\" ? \"inbox\" : \"sentMails\");\n  };\n\n  const selectEmails = (event, data) => {\n    if (event.target.checked) {\n      setSelectedMails([...selectedMails, data.id]);\n    } else {\n      let selectMails = selectedMails.filter((ele) => ele !== data.id);\n      setSelectedMails(selectMails);\n    }\n  };\n\n  const markSelectedMailasRead = (event) => {\n    selectedMails.forEach((ele) => {\n      readSelectedMails(ele, props.heading === \"Inbox\" ? \"inbox\" : \"sentMails\");\n    });\n    setSelectedMails([]);\n    props.updateInbox(props.heading === \"Inbox\" ? \"inbox\" : \"sentMails\");\n  };\n\n  const handleSentMails = () => {\n    props.changeheading(\"Sent Mails\");\n    props.updateInbox(\"sentMails\");\n  };\n\n  const handleInboxMail = () => {\n    props.changeheading(\"Inbox\");\n    props.updateInbox(\"inbox\");\n  };\n\n  return (\n    <>\n      <Dialog\n        open={isDialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth={\"sm\"}\n        fullWidth\n        data-testid=\"dialog-mail\"\n      >\n        <DialogTitle id=\"form-dialog-title\">New Message</DialogTitle>\n        <DialogContent>\n          <form autoComplete=\"off\">\n            <div className={classes.sendMailElement}>\n              <TextField\n                id=\"component-from\"\n                value={localStorage.getItem(\"loggedInUserEmail\")}\n                label=\"From\"\n                type=\"email\"\n                required\n                fullWidth\n                variant=\"outlined\"\n                data-testid=\"data-from\"\n                disabled\n              />\n            </div>\n            <div className={classes.sendMailElement}>\n              <TextField\n                label=\"To\"\n                error={!isToValid}\n                margin=\"dense\"\n                id=\"to\"\n                type=\"email\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                onChange={(event) => {\n                  setTo(event.target.value);\n                }}\n                data-testid=\"data-to\"\n              />\n            </div>\n            <div className={classes.sendMailElement}>\n              <TextField\n                label=\"Cc\"\n                error={!isCCValid}\n                margin=\"dense\"\n                id=\"cc\"\n                type=\"email\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                onChange={(event) => {\n                  setCc(event.target.value);\n                }}\n                data-testid=\"data-cc\"\n              />\n            </div>\n            <div className={classes.sendMailElement}>\n              <TextField\n                error={!isSubjectValid}\n                label=\"Subject\"\n                margin=\"dense\"\n                id=\"subject\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={(event) => {\n                  setSubject(event.target.value);\n                }}\n                data-testid=\"data-subject\"\n              />\n            </div>\n            <div className={classes.sendMailElement}>\n              <TextField\n                error={!isBodyValid}\n                margin=\"dense\"\n                id=\"body\"\n                label=\"\"\n                type=\"email\"\n                fullWidth\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                onChange={(event) => {\n                  setBody(event.target.value);\n                }}\n                data-testid=\"data-body\"\n              />\n            </div>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            onClick={handleCloseDialog}\n            className={classes.cancelButton}\n            data-testid=\"data-cancel\"\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={handleEmailSending}\n            className={classes.sendButton}\n            endIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Grid\n        container\n        className={classes.root}\n        spacing={3}\n        data-testid=\"mail-content\"\n      >\n        <Grid item xs={12} lg={3}>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.controlBar}\n            spacing={2}\n          >\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                size={\"large\"}\n                className={classes.composeButton}\n                onClick={handleOpenDialog}\n              >\n                Compose Mail\n              </Button>\n            </Grid>\n            <Grid item xs={12} className={classes.section}>\n              <Grid container direction=\"column\">\n                <Grid item>\n                  <Typography\n                    variant=\"overline\"\n                    style={{ fontWeight: 600 }}\n                    className={classes.sectionHeading}\n                  >\n                    FOLDERS\n                  </Typography>\n                </Grid>\n                <Grid\n                  item\n                  className={classes.folderInfoItem}\n                  onClick={handleInboxMail}\n                >\n                  <span className=\"material-icons\">inbox</span>\n                  <Typography variant=\"body2\">Inbox</Typography>\n                  <Typography\n                    variant=\"body2\"\n                    className=\"countInfo\"\n                    style={{\n                      backgroundColor: colors.secondaryColor,\n                      color: colors.white,\n                    }}\n                  >\n                    {\n                      JSON.parse(localStorage.getItem(\"inbox\")).filter(\n                        (ele) => !ele.isRead\n                      ).length\n                    }\n                  </Typography>\n                </Grid>\n                <Divider></Divider>\n                <Grid\n                  item\n                  className={classes.folderInfoItem}\n                  onClick={handleSentMails}\n                >\n                  <span className=\"material-icons\">mail</span>\n                  <Typography variant=\"body2\">Sent mails</Typography>\n                </Grid>\n                <Divider></Divider>\n                <Grid item className={classes.folderInfoItem}>\n                  <span className=\"material-icons\">star</span>\n                  <Typography variant=\"body2\">Important</Typography>\n                </Grid>\n                <Divider></Divider>\n                <Grid item className={classes.folderInfoItem}>\n                  <span className=\"material-icons\">drafts</span>\n                  <Typography variant=\"body2\">Drafts</Typography>\n                </Grid>\n                <Divider></Divider>\n                <Grid item className={classes.folderInfoItem}>\n                  <span className=\"material-icons\">delete</span>\n                  <Typography variant=\"body2\">Trash</Typography>\n                </Grid>\n                <Divider></Divider>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.section}>\n              <Grid container direction=\"column\">\n                <Grid item>\n                  <Typography\n                    variant=\"overline\"\n                    style={{ fontWeight: 600 }}\n                    className={classes.sectionHeading}\n                  >\n                    CATEGORIES\n                  </Typography>\n                </Grid>\n                {categories.map((ele, index) => (\n                  <Grid item className={classes.categoryItem} key={index}>\n                    <div\n                      className={classes.circle}\n                      style={{ backgroundColor: ele.indicatorColor }}\n                    ></div>\n                    <Typography variant=\"body2\" style={{ display: \"inline\" }}>\n                      {ele.name}\n                    </Typography>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.section}>\n              <div>\n                <Typography variant=\"overline\" style={{ fontWeight: 600 }}>\n                  Labels\n                </Typography>\n              </div>\n              {labels.map((data, index) => (\n                <div className={classes.labelContainer} key={\"label-\" + index}>\n                  <span className=\"material-icons\">label</span>\n                  <Typography variant=\"caption\">{data}</Typography>\n                </div>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} lg={9}>\n          <Paper elevation={0}>\n            <Grid container spacing={3} className={classes.emailSection}>\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  direction=\"row\"\n                  className={classes.emailSectionHeading}\n                >\n                  <Grid item>\n                    <Typography variant=\"h4\" gutterBottom={true}>\n                      {props.heading} (\n                      {props.inbox\n                        ? props.inbox.filter((ele) => !ele.isRead).length\n                        : 0}\n                      )\n                    </Typography>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<CachedIcon fontSize=\"small\" />}\n                      className={classes.inboxCtrlButton}\n                    >\n                      Refresh\n                    </Button>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<VisibilityIcon fontSize=\"small\" />}\n                      className={classes.inboxCtrlButton}\n                      onClick={markSelectedMailasRead}\n                    ></Button>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<PriorityHighIcon fontSize=\"small\" />}\n                      className={classes.inboxCtrlButton}\n                    ></Button>\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<DeleteIcon fontSize=\"small\" />}\n                      className={classes.inboxCtrlButton}\n                      onClick={handleDelete}\n                    ></Button>\n                  </Grid>\n                  <Grid\n                    item\n                    style={{\n                      marginLeft: \"auto\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    <div className={classes.searchField}>\n                      <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Seach email\"\n                        size=\"small\"\n                      ></TextField>\n                      <Button\n                        variant=\"contained\"\n                        style={{ marginLeft: \"1rem\" }}\n                      >\n                        Search\n                      </Button>\n                    </div>\n                    <div style={{ marginLeft: \"auto\" }}>\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<ArrowBack fontSize=\"small\" />}\n                        className={classes.inboxCtrlButton}\n                      ></Button>\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<ArrowForward fontSize=\"small\" />}\n                        className={classes.inboxCtrlButton}\n                      ></Button>\n                    </div>\n                  </Grid>\n                </Grid>\n                <MailsList\n                  mails={props.inbox}\n                  updateMails={props.updateInbox}\n                  handleSelection={selectEmails}\n                  selectedMailList={selectedMails}\n                ></MailsList>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import {useState} from 'react';\n\nconst useSignInForm = (initialValues, callback) => {\n    const [inputs, setInputs] = useState(initialValues);\n\n    const handleSubmit = (event) => {\n        if(event) {\n            event.preventDefault();\n        }\n        callback();\n    }\n\n    const handleInputChange = (event) => {\n        event.persist();\n        setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}))\n    }\n\n    return {inputs, handleInputChange, handleSubmit};\n}\n\nexport default useSignInForm;\n","import React, { useState } from \"react\";\nimport useSignInForm from \"../utils/customHook\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Typography } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { userLoginDetails } from \"../utils/constants\";\nimport { setUserData } from \"../utils/utils\";\n\nconst SignIn = (props) => {\n  const [error, setError] = useState(false);\n\n  const signIn = () => {\n    const userObj = userLoginDetails.find((ele) => {\n      return (\n        ele.username === inputs.userName && ele.password === inputs.password\n      );\n    });\n    if (userObj !== undefined) {\n      localStorage.setItem(\"loggedInUserEmail\", userObj.username);\n      setUserData();\n      props.onLogin();\n    } else {\n      setError(true);\n    }\n  };\n\n  const { inputs, handleInputChange, handleSubmit } = useSignInForm(\n    { userName: \"\", password: \"\" },\n    signIn\n  );\n\n  return (\n    <div className=\"home-page-block\">\n      <div className=\"home-page-inner-block\">\n        <Box pt={10}>\n          <Container maxWidth=\"lg\">\n            <Grid container justify=\"center\">\n              {/* <Grid item>\n                <StockGallery></StockGallery>\n              </Grid> */}\n              <Grid item>\n                <Paper style={{ padding: \"20px\" }}>\n                  <AppBar\n                    position=\"static\"\n                    style={{ padding: \"10px\", alignItems: \"center\" }}\n                  >\n                    <Typography> Sign In </Typography>\n                  </AppBar>\n                  <div>\n                    <form onSubmit={handleSubmit}>\n                      <div className=\"form-element\">\n                        <TextField\n                          type=\"text\"\n                          name=\"userName\"\n                          label=\"Username\"\n                          onChange={handleInputChange}\n                          value={inputs.userName}\n                          required\n                        />\n                      </div>\n                      <div className=\"form-element\">\n                        <TextField\n                          type=\"password\"\n                          name=\"password\"\n                          label=\"Password\"\n                          onChange={handleInputChange}\n                          value={inputs.password}\n                          required\n                        />\n                      </div>\n                      <div\n                        className=\"form-element\"\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          type=\"submit\"\n                        >\n                          Sign In\n                        </Button>\n                      </div>\n                      {error ? (\n                        <Typography color=\"error\">\n                          {\" \"}\n                          Incorrect credentials provided\n                        </Typography>\n                      ) : (\n                        \"\"\n                      )}\n                    </form>\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Container>\n        </Box>\n      </div>\n      <blockquote>\n        <span>\n          Photo by{\" \"}\n          <a href=\"https://unsplash.com/@brett_jordan?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n            Brett Jordan\n          </a>{\" \"}\n          on{\" \"}\n          <a href=\"https://unsplash.com/s/photos/email?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">\n            Unsplash\n          </a>\n        </span>\n      </blockquote>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SideBar from \"./modules/sidebar/sidebar\";\r\nimport Dashboard from \"./modules/dashboard/dashboard\";\r\nimport {\r\n  colors,\r\n  userInitialMailsList,\r\n  userSentMailsList,\r\n} from \"./utils/constants\";\r\nimport SignIn from \"./components/signIn\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport Notifications from \"@material-ui/icons/Notifications\";\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    left: \"73px\",\r\n    width: `calc(100% - 73px)`,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth - 73,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolBarClass: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    backgroundColor: colors.white,\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  openDrawerToolbar: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    backgroundColor: colors.backgroundColor,\r\n  },\r\n  isDrawerOpen: {\r\n    left: \"72px\",\r\n  },\r\n  button: {\r\n    minWidth: \"30px\",\r\n    backgroundColor: colors.primaryGreenColor,\r\n    padding: \"6px 10px\",\r\n    color: colors.white,\r\n    \"& span>span\": {\r\n      margin: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [wasLoginSuccessfull, setLoginSuccess] = useState(false);\r\n  const [userDetails, setUserDetails] = useState(\r\n    JSON.parse(localStorage.getItem(\"userDetails\"))\r\n  );\r\n  const [inboxValue, setInboxValue] = useState(\r\n    JSON.parse(localStorage.getItem(\"inbox\"))\r\n  );\r\n  const [headingText, setHeading] = useState(\"Inbox\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"mailsList\") === null) {\r\n      localStorage.setItem(\"mailsList\", JSON.stringify(userInitialMailsList));\r\n    }\r\n    if (localStorage.getItem(\"userDetails\") !== null) {\r\n      setLoginSuccess(true);\r\n      setUserDetails(localStorage.getItem(\"userDetails\"));\r\n    }\r\n    if (localStorage.getItem(\"sentMailsList\") === null) {\r\n      localStorage.setItem(\"sentMailsList\", JSON.stringify(userSentMailsList));\r\n    }\r\n  }, []);\r\n\r\n  const updateInbox = (data) => {\r\n    if (data === \"sentMails\") {\r\n      setInboxValue(JSON.parse(localStorage.getItem(\"sentMails\")));\r\n    } else {\r\n      setInboxValue(JSON.parse(localStorage.getItem(\"inbox\")));\r\n    }\r\n  };\r\n\r\n  const handleSuccessfullLogin = () => {\r\n    setLoginSuccess(true);\r\n    updateInbox(\"inbox\");\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoginSuccess(false);\r\n    localStorage.clear();\r\n    localStorage.setItem(\"mailsList\", JSON.stringify(userInitialMailsList));\r\n    localStorage.setItem(\"sentMailsList\", JSON.stringify(userSentMailsList));\r\n  };\r\n  return (\r\n    <>\r\n      {wasLoginSuccessfull ? (\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: open,\r\n            })}\r\n          >\r\n            <Toolbar className={classes.toolBarClass}>\r\n              <Typography\r\n                variant=\"h6\"\r\n                noWrap\r\n                style={{ color: colors.greyColor2 }}\r\n              >\r\n                Search for something...\r\n              </Typography>\r\n              <div style={{ marginLeft: \"auto\" }}>\r\n                <Badge\r\n                  badgeContent={\r\n                    JSON.parse(localStorage.getItem(\"inbox\")).filter(\r\n                      (ele) => !ele.isRead\r\n                    ).length\r\n                  }\r\n                  color=\"primary\"\r\n                  style={{ marginLeft: \"2rem\" }}\r\n                  showZero\r\n                >\r\n                  <MailIcon style={{ color: colors.greColor1 }} />\r\n                </Badge>\r\n                <Badge\r\n                  badgeContent={0}\r\n                  color=\"secondary\"\r\n                  style={{\r\n                    marginLeft: \"1.5rem\",\r\n                    color: colors.primaryGreenColor,\r\n                  }}\r\n                >\r\n                  <Notifications style={{ color: colors.greColor1 }} />\r\n                </Badge>\r\n                <Button\r\n                  startIcon={<ExitToAppIcon></ExitToAppIcon>}\r\n                  onClick={logout}\r\n                  style={{ marginLeft: \"1.5rem\", color: colors.greColor1 }}\r\n                >\r\n                  Logout\r\n                </Button>\r\n              </div>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <SideBar\r\n            updateDrawerState={setOpen}\r\n            inbox={inboxValue}\r\n            userData={userDetails}\r\n          ></SideBar>\r\n          <main className={classes.content}>\r\n            <Dashboard\r\n              inbox={inboxValue}\r\n              updateInbox={updateInbox}\r\n              heading={headingText}\r\n              changeheading={setHeading}\r\n            ></Dashboard>\r\n          </main>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <SignIn\r\n            data-id=\"sign-In-module\"\r\n            onLogin={handleSuccessfullLogin}\r\n          ></SignIn>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}